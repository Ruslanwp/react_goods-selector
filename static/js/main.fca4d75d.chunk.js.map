{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","goods","selectedGoods","addGood","good","includes","setState","prevState","removeGood","filter","selectedGood","resetSelections","this","className","length","map","type","onClick","key","classNames","active","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgFaC,E,4MA5EbC,MAAQ,CACNC,MAAOH,EACPI,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACJ,EAAKJ,MAAME,cAAcG,SAASD,IACrC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAc,GAAD,mBACRK,EAAUL,eADF,CAEXE,S,EAMRI,WAAa,SAACJ,GACR,EAAKJ,MAAME,cAAcG,SAASD,IACpC,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BL,cAAeK,EAAUL,cAAcO,QACrC,SAAAC,GAAY,OAAIA,IAAiBN,U,EAMzCO,gBAAkB,WAChB,EAAKL,SAAS,CAAEJ,cAAe,M,4CAGjC,WAAU,IAAD,SAC0BU,KAAKZ,MAA9BC,EADD,EACCA,MAAOC,EADR,EACQA,cAEf,OACE,yBAAKW,UAAU,OACb,4BACGX,EAAcY,OAAS,EAAvB,0BACsBZ,EAAca,KAAI,SAAAX,GAAI,iBAAQA,OADpD,qBAIH,4BACEY,KAAK,SACLC,QAASL,KAAKD,iBAFhB,KAMA,4BACGV,EAAMc,KAAI,SAAAX,GAAI,OACb,wBAAIc,IAAKd,GACP,uBAAGS,UAAWM,IACZ,GACA,CAAEC,OAAQlB,EAAcG,SAASD,MAGhCA,GAEH,4BACEY,KAAK,SACLC,QAAS,kBAAM,EAAKd,QAAQC,KAF9B,OAMA,4BACEY,KAAK,SACLC,QAAS,kBAAM,EAAKT,WAAWJ,KAFjC,oB,GA/DIiB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fca4d75d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  }\n\n  addGood = (good) => {\n    if (!this.state.selectedGoods.includes(good)) {\n      this.setState(prevState => ({\n        selectedGoods: [\n          ...prevState.selectedGoods,\n          good,\n        ],\n      }));\n    }\n  }\n\n  removeGood = (good) => {\n    if (this.state.selectedGoods.includes(good)) {\n      this.setState(prevState => ({\n        selectedGoods: prevState.selectedGoods.filter(\n          selectedGood => selectedGood !== good,\n        ),\n      }));\n    }\n  }\n\n  resetSelections = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGoods.length > 0\n            ? `Selected goods: ${selectedGoods.map(good => ` ${good}`)}`\n            : `No goods selected`}\n        </h1>\n        <button\n          type=\"button\"\n          onClick={this.resetSelections}\n        >\n          X\n        </button>\n        <ul>\n          {goods.map(good => (\n            <li key={good}>\n              <p className={classNames(\n                '',\n                { active: selectedGoods.includes(good) },\n              )}\n              >\n                {good}\n              </p>\n              <button\n                type=\"button\"\n                onClick={() => this.addGood(good)}\n              >\n                Add\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.removeGood(good)}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}